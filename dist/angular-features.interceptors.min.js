/*! angular-features v0.0.1 2015-03-16, Jim Schubert (c) 2015 MIT License */

!function(){!function(){"use strict";var a="inc.features.interceptors",b="featureExclusion",c=angular.module(a,["inc.features.urlparser"]);c.provider(b,function(){var c=this,d="data",e="feature",f=["html"],g=!0,h="["+a+"|"+b+"] ",i=[],j=!0;c.setPrefix=function(a){if(!angular.isString(a))throw new Error(h+"setPrefix requires a string parameter");return d=a,c},c.setAttribute=function(a){if(!angular.isString(a))throw new Error(h+"setAttribute requires a string parameter");return e=a,c},c.addExtension=function(a){if(!angular.isString(a))throw new Error(h+"addExtension requires a string parameter");return-1===f.indexOf(a)&&f.push(a),c},c.enableCaching=function(a){return angular.isUndefined(a)&&(a=!0),j=a,c},c.enableLogging=function(a){return angular.isUndefined(a)&&(a=!0),g=a,c},c.addFeature=function(a){return-1===i.indexOf(a)&&i.push(a),c},c.defineAllFeatures=function(a){if(!angular.isArray(a))throw new Error(h+"defineAllFeatures must be passed an array of strings");return i=a,c},this.$get=["$log","$q","$templateCache","urlparser",function(a,b,c,k){var l=/[^\.]*?\.(.*)/,m=[d,e].join("-"),n={response:function(b){var d,e,n;try{if(j&&(d=c.get(b.config.url))&&angular.isString(d[0]))b.data=d;else if(e=k.parse(b.config.url),(n=l.exec(e.file))&&-1!==f.indexOf(n[1])){if(d=angular.element(b.data),angular.isDefined(d[0])){d=d[0];var o=d.querySelectorAll("["+m+"]");1===o.length&&o[0]===d?d.innerHTML="":angular.forEach(o,function(a){-1===i.indexOf(angular.element(a).attr(m))&&a.remove()}),j&&c.put(b.config.url,d.innerHTML),b.data=d.innerHTML}}else g&&a.debug(h+"FileType not included for processing")}catch(p){a.error(h+"Unexpected error.")}return b},responseError:function(c){return g&&a.warn(h+"Unable to evaluate response due to external error"),b.reject(c)}};return n}]})}()}();
//# sourceMappingURL=angular-features.interceptors.min.js.map